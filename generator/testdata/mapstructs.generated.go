// Code generated by "typemapper "; DO NOT EDIT.

// +build !typemapper

package testdata

func MapStructPtrSrcDestParams(src *SourceStruct, dst *DestStruct) {
	if dst == nil {
		return
	}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return
}
func MapStructPtrSrcParamsDestConst(src *SourceStruct) DestStruct {
	dst := DestStruct{}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst
}
func (src *SourceStruct) MapStructPtrSrcRecvDestConst() DestStruct {
	dst := DestStruct{}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst
}
func (src *SourceStruct) MapStructPtrSrcRecvPtrDestConst() *DestStruct {
	dst := new(DestStruct)
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst
}
func (src *SourceStruct) MapStructPtrSrcRecvPtrDestConstError() (*DestStruct, error) {
	dst := new(DestStruct)
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst, nil
}
func MapStructSrcDestParams(src SourceStruct, dst *DestStruct) {
	if dst == nil {
		return
	}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return
}
func MapStructSrcDstParamsError(src SourceStruct, dst *DestStruct) error {
	if dst == nil {
		return nil
	}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return nil
}
func MapStructSrcParamsDestConst(src SourceStruct) DestStruct {
	dst := DestStruct{}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst
}
func MapStructSrcParamsDestConstError(src SourceStruct) (DestStruct, error) {
	dst := DestStruct{}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst, nil
}
func MapStructSrcParamsPtrDestConst(src SourceStruct) *DestStruct {
	dst := new(DestStruct)
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst
}
func (src SourceStruct) MapStructSrcRecvDestConst() DestStruct {
	dst := DestStruct{}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst
}
func (src SourceStruct) MapStructSrcRecvDestParams(dst *DestStruct) {
	if dst == nil {
		return
	}
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return
}
func (src SourceStruct) MapStructSrcRecvPtrDestConst() *DestStruct {
	dst := new(DestStruct)
	dst.StringMatch = src.StringMatch
	dst.IntMatch = src.IntMatch
	dst.BoolMatch = src.BoolMatch
	dst.PointerMatch = &src.PointerMatch
	dst.DerefMatch = *src.DerefMatch
	dst.TypeAliasMatch = stringAlias(src.TypeAliasMatch)
	return dst
}
